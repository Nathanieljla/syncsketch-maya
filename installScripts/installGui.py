import os
import sys
from maya import cmds
import webbrowser
import math
from datetime import datetime, timedelta
import glob
import urllib2
import tempfile
import shutil
import sys
import subprocess
import platform
from os.path import expanduser
import zipfile
import maya.utils
import maya.cmds
from functools import partial


DEV = False
MAYA_API_VERSION = int(str(cmds.about(apiVersion=True))[:4])
if MAYA_API_VERSION >= 2017:
    from PySide2.QtCore import *
    from PySide2.QtWidgets import *
    from PySide2.QtGui import *

else:
    from PySide.QtCore import *
    from PySide.QtGui import *

SYNCSKETCH_GUI_RELEASE_PATH = 'https://github.com/syncsketch/syncsketchGUI/archive/release.zip'
SYNCSKETCH_API_RELEASE_PATH = 'https://github.com/syncsketch/python-api/archive/v1.0.1.zip'
if DEV:
    SYNCSKETCH_GUI_RELEASE_PATH = '/Users/chavez/deleteMePls/syncsketchGUI'


InstallPath = {
               'Darwin': '{0}/Library/Preferences/Autodesk/maya/{1}/scripts/'.format(expanduser('~'), MAYA_API_VERSION),
               'linux64': '$HOME/maya/scripts', #Todo: Not tested
               'Windows':  '{0}/Documents/maya/{1}/scripts'.format(expanduser('~'), MAYA_API_VERSION)
              }

class Icon():
    def __init__(self, base64Image):
        self.base64Image = base64Image

    def base64ToQPixmap(self):
        pixmap = QPixmap()
        pixmap.loadFromData(QByteArray.fromBase64(str(self.base64Image)))
        return pixmap

class InstallOptions(object):
    def __init__(self):
        pass
    installShelf = 1
        

class Ressources(object):
    def __init__(self):
        pass
    GIFDEVICE = None

    companyLogoBase64 = ''''''
    companyLogo = QPixmap(Icon(companyLogoBase64).base64ToQPixmap())

    base64Image = '''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'''
    Olaf = QPixmap(Icon(base64Image).base64ToQPixmap())

    base64Image = '''iVBORw0KGgoAAAANSUhEUgAAAFgAAABYCAYAAABxlTA0AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEwAACxMBAJqcGAAAA2NJREFUeJztnN9RGzEQh3+ryTvuIHQAqSCOzn4OJUAFoYO4BKeCpAR4PkvjdGA6oATTgDYvx4xjwv3x7Z7kyX5v3N5I6w8h6eQ9AMMwDMMwDMMwDMMwDMMwDON/gHIn0JcY4+fDn733v3PlMoTiBdd1feGcewYwO7zOzNvFYvElT1b9cbkT6MI5t8aRXAAgonkI4XuGlAZRvGAANy2x+8myOJFzEPxm9PaMFcE5CD5rTLAyJlgZE6yMCVbGBCtjgpX5oNHoZrP5hr8fEPbOuZX3/kmjv6HEGK9SSuvDa865tff+Ubov8bOIGONXZn74R+g5pXS9XC5fhrQXQuC2eFVVgz5Dc7axA3B5FNoT0Vx6EIhPESml1TuhSyLa1nV9Id1nX+q6viCiLd7KBYDZ8aiWQFwwEV23xXJJfpXbkd9cut/JF7kckvvI1UJcMDNvu+6ZUvIQuX1yH4q4YOfcPYB9131TSB44cvdN7qKIC/bePzVzWVbJQ+Vq7CAApTk4t+RS5AKKi1wuySXJBZR3EVNLLk0uMME2bSrJJcoFJtoHa0suVS4wcV1EjPGq2Wt2flnJzDtmnjvnWn8pKaVZqXKBDIUnQyV3ietzT8PkcoFMlT1DJAuRRS6QsXRqQsnZ5AKZa9MmkJxVLlBA8Z+i5OxygQIEAyqSi5ALFCIYEJVcjFygIMGAiOSi5AKFCQZGSS5OLiAoWLLE/wTJo+VqvaIwWrBWif8AyaPkar+iMPqwR6vEv+cB0eiRq/2KgsRpmlqJfyP59p2w1Jyr+oqChGDVEn/v/SMRXTPz7vUaM29TSpdCC5pq/iq1adI0Ij/lzuMU1A/cY4xX2n2cyvHOQYPRgruKNVJK87F9aJFSap1jJQpRRk8RRPTcEV9tNhsw86+hlZVahBA+MvOaiNoWOBDRri3eh9GCmXnbstIDwIyI1kS0DiGM7U4Mou5HgKYScxQSU8QDenyZeYbsJQqyRwtu/uzF62pzw8wriXZEdhEppfXhPvXcYebdYrH4IdGWiODlcvnCzHON8s+pYeYtM8+l2hM/rgwh/ARwK93uRPyqqupOskHxB42qqu6Y+RZntvAx8720XEDxwL0pZ7oBcNOcihX3rweaKe2hpD26YRiGYRiGYRiGYRiGYRiGYRiGYRjD+AN6etoeN+hk/AAAAABJRU5ErkJggg=='''
    installIcon = QPixmap(Icon(base64Image).base64ToQPixmap())

    base64Image = '''iVBORw0KGgoAAAANSUhEUgAAAFgAAABYCAYAAABxlTA0AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyNpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuNS1jMDE0IDc5LjE1MTQ4MSwgMjAxMy8wMy8xMy0xMjowOToxNSAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENDIChNYWNpbnRvc2gpIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOkZFN0ZCOTgzMjEzNzExRTlBRjJDRTMwNUFDQzg3MDUyIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOkZFN0ZCOTg0MjEzNzExRTlBRjJDRTMwNUFDQzg3MDUyIj4gPHhtcE1NOkRlcml2ZWRGcm9tIHN0UmVmOmluc3RhbmNlSUQ9InhtcC5paWQ6RkU3RkI5ODEyMTM3MTFFOUFGMkNFMzA1QUNDODcwNTIiIHN0UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6RkU3RkI5ODIyMTM3MTFFOUFGMkNFMzA1QUNDODcwNTIiLz4gPC9yZGY6RGVzY3JpcHRpb24+IDwvcmRmOlJERj4gPC94OnhtcG1ldGE+IDw/eHBhY2tldCBlbmQ9InIiPz6CenaqAAADF0lEQVR42uycTWsTURiFJ6FL9Qd0VRAUF1JKa6mC6EbwFyiIO5EillYXfiEKbhQCVgXRUks3UrAL125ctGBBWqjoQhCFoCbqhASsiAtdxHPhHQglaSY392vSc+AwyfTeyfTpy7n3TUJz9Xo9ouwpTwQETMAUARMwAVMETMAETBEwAVMETMAETBEwARMwRcAETMAUARMwRcC+1Of7Bo5cPury5V7A7+AryYnlwlJvA3aoBfi4uAjPMCLMwj3V8PwxfHFbRIQDPYNPNjk/DefkyArW1GILuInuYg04R8D6sXAixbhHgDxOwN1lbjvNAPJ1Ak6npx3CTTRBwO31BD6tMa8MD3IXYTYWEpXgETQcFVawebhf4WHAjbnImc/css3K7RXAC5qZ+0lVLlyxfYNZzuDZLjJ3DK6xVW6tOfiMZuaOuILrLCKwid8NXzKYuTpwywK34rIS8g7g7sDhJVzA4weeMrfsKnOdAgbQXTi8ggfk1CTO3XacuVX4IBxHHpS3DHetSYd0DT+70+HlHsJnNTN3SI5RzwAGwJ04rMJ7Wgy5ijH3Ul5uHj7fReaWfK7GfZYq9zW8t83QCxir/sBTttpfH5lrtYIBrF9iYV/KKZPwfcNwv8uCFkcByHREPN8iFlpJVfCtJpmru6CNhVC5tgDfgH9pzLupFj95PK2Zud8kFr6E1BEZBbxcWFL73VF4Q2O62r6p7yzofNpbklj4HFrLaXwXAcgfpJL+aEzf30Xm/gixp7eyTQNk9W7VIfif5fsPLnOdNRqA/FZ++d+WXqIWYuY6bZUBeV0gbFio3AMhZq5TwJsy+aehSybtbzHKgJy8XSmZPGogk6shtL/BARbIHyWTdSHXQml/gwTckMkK8l8NuJnIXK+AGyAPdZDJsexzi1EG5eVTZUB+nzKTVeYOZrFyvQJOmclJ5sZRhuX1exFbZHJmMzcowKL1TZVczXLmhghY6Q18DF6BD/dC5SbK8d/bbo8KJmCKgAmYgCkCJmCKgAmYgCkCJmACpgiYgAmYCAiYgCkCJmACpgiYgAmYMq3/AgwA+XHGcJ7d4J4AAAAASUVORK5CYII='''
    launchIcon = QPixmap(Icon(base64Image).base64ToQPixmap())


    base64Image = '''iVBORw0KGgoAAAANSUhEUgAAAFgAAABYCAYAAABxlTA0AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEwAACxMBAJqcGAAAA7lJREFUeJztm8tx2zAQhv9lA3YHdiqwO4iGpM5xB6Y7UAdRKohSQeQO5DMfo3Qgd6B0IDfAzSHgjOwhJQDCgvTMfleCXPIbEI8FACiKoiiKoiiKoiiKoiiKoiiKoiiKoijKECT14LqubwAUzDwDACLatW27nM/nb1IxbWia5o6ZF8x8a95rT0SrNE1fJeKJCK7r+ieARc+ldZZlTxIxbSjL8oqItkR0//EaEd1LSA4u2NSQ3Yki67ZtF7Frcl3XN8y86ZNr2GdZ9iV03CT0A5n54UyRgoi2ZVlehY49RNM0dwB2J+QCwK1EbAnBh3NliOg+lmTzR20BXEvH6iO44CRJtjblYkh2kXumWfMmuOA0TV+ZeWNTlojukyTZm184KFVVPRpptjV3HfodAAHBAMDMhUONuGbmbUjJVVU9EtHa4ZZ1nue/QsU/RkTwfD5/Y+aZ+T1tCCbZQ+5KcugoNtHoqOv6N4DCsviBmRd5nj97xhoaf/fCzIVvLFvEBQPOkr0+PEYMH6IIBmQFTFUuEFEw4NU+LrMs+zF00Ux910R0bnLTcSCimVTeoY+oggG/Hr6vEzqVVxggulxgBMHA5ZI/i1xgJMEA0DTNVzMhsZ4ItG27SJLk+kzS5h3MvCOihyzL/vq/rT+jCQbc8wRG1q1LeWaejZmDHlUwIJeMmYJcQGgm50Kapq9ENAuZbGHmzRTkAhOowR0eHdcQo66afGQygoEgkiclF5hAE3GMR5LoGNGkjS+TEgz8l0xEW8fbDh73RGFSTQTgnlc4JmaOwZZJCb5EbsfUJE9CcFmWV0mSrHCh3A6TUxZZoXBldMEBh2cfmcSIYtROzidp4/D4wjQ5ozKaYFe5Jg8xM7lfW9GjSx6lifBJ8hxPfS+9PybRBYeS81kkR20iPKRsh6R0SSIAe5tnxdyu9S5urEBmFWMFhwS7zSjAo6PcE9FDrNWNKIJDrcMNMeUlJHHB0nI7pipZVHBd198BLG3Lh5jmuu4kIqIiTdOXS2KeQvKMxmibQaa0EUVEsGuzIPGBrpJNxxe8JosM04hoaVn0QEQzidqTZdkTM1tvBGzbdhn6HQABwVVVPcLuvEPXyfwJ/Q4deZ7/YubCpqxAsgmAgGCzb+Ec0YZJeZ4/20qWQELwyeMDXdIm5jamPM+fLZJEe4nYImc0AKz6rnX5gDH2iKVp+mKm1n2S9w47NJ0QG6Y1TfOtbdvjTmbNzJuxN4P0HPHdj3EwUlEURVEURVEURVEURVEURVEURVEURVGAf9l4XANGvwF5AAAAAElFTkSuQmCC'''
    closeIcon = QPixmap(Icon(base64Image).base64ToQPixmap())


preloaderAnimBase64 = ''''''
byteArraseGif = QByteArray.fromBase64(str(preloaderAnimBase64))
Ressources.GIFDEVICE = QBuffer(byteArraseGif)
print('device successfully opened: {0}'.format(Ressources.GIFDEVICE.open(QIODevice.ReadOnly)))

syncsketchURL = 'http://www.syncsketch.com'
TMPDIR = os.getenv('TMPDIR')
MAYA_APP_DIR = os.getenv('MAYA_APP_DIR')



        

class UIDesktop(object):
    def __init__(self, name, size=[300, 300], *args, **kwargs):
        self.setObjectName(name)

        width = size[0]
        height = size[1]
        desktop = QApplication.desktop()
        screenNumber = desktop.screenNumber(QCursor.pos())
        screenRect = desktop.screenGeometry(screenNumber)
        widthCenter = screenRect.width() / 2 - width / 2
        heightCenter = screenRect.height() / 2 - height / 2
        self.setMinimumSize(QSize(*size))
        self.setGeometry(QRect(widthCenter, heightCenter, width, height))
        self.setWindowIcon(Ressources.Olaf)


class installerUI(QWidget, UIDesktop):

    def clean(self):
        Ressources.GIFDEVICE.close()
        del Ressources.GIFDEVICE
        print ('Cleaning Ressources')

    def closeEvent(self, event):
        self.clean()


    def __init__(self, *args, **kwargs):
        QWidget.__init__(self, *args, **kwargs)

        size = [500, 200]
        name = 'Syncsketch GUI Installer'

        UIDesktop.__init__(self, name, size, *args, **kwargs)

        self.setWindowTitle('Syncsketch GUI Installer')
        self.setWindowModality(Qt.ApplicationModal)

        self.setWindowFlags(Qt.Tool)
        self.setFixedSize(QSize(*size))

        self.createLayout()

    def checkBoxChanged(self, state, name):
        if name == 'installShelf':
            InstallOptions.installShelf = state
            print(state)


    def createLayout(self):
        outer = QVBoxLayout()
        self.setLayout(outer)

        self.movie = QMovie()
        self.movie.setDevice(Ressources.GIFDEVICE)
        self.animatedGif = QLabel()

        self.animatedGif.setMovie(self.movie)
        self.animatedGif.setMaximumHeight(24)
        self.animatedGif.setAlignment(Qt.AlignLeft| Qt.AlignVCenter)
        self.animatedGif.setScaledContents(True)
        self.animatedGif.setMaximumWidth(24)
        self.movie.start()


        logo = QLabel()
        logo.setPixmap(Ressources.companyLogo)

        logo.setScaledContents(True)
        outer.addWidget(logo, 0)



        spacer = QSpacerItem(0, 0, QSizePolicy.Expanding, QSizePolicy.Expanding)
        outer.addItem(spacer)

       


        subLayout = QHBoxLayout()
        subLayout.setContentsMargins(0, 0, 0, 0)
        subLayout.setSpacing(0)
        outer.addLayout(subLayout, 0)

        textA = QLabel(u'')
        subLayout.addWidget(textA)


        infoButton = QPushButton('SyncSketch LLC')
        infoButton.setStyleSheet('QPushButton {text-decoration: underline; text-align: left;}')
        infoButton.setFlat(True)
        infoButton.setMaximumHeight(20)
        subLayout.addWidget(infoButton, 0)
        
        infoButton.clicked.connect(lambda: webbrowser.open(syncsketchURL, new=0, autoraise=True))

        textB = QLabel(u'Get Information about this product at: ')
        subLayout.addWidget(textB)
        

        self.installShelf = QCheckBox('Install Syncsketch Shelf', self)
        self.installShelf.setChecked(True)
        self.installShelf.stateChanged.connect(partial(self.checkBoxChanged, 'installShelf'))
        subLayout2 = QVBoxLayout()
        subLayout2.setContentsMargins(0, 0, 0, 0)
        subLayout2.setSpacing(0)
        subLayout2.addWidget(self.installShelf, 0)

        outer.addLayout(subLayout2, 0)


        infoButton = QPushButton('syncsketch.com')
        infoButton.setStyleSheet('QPushButton {text-decoration: underline; text-align: left;}')
        infoButton.setFlat(True)
        infoButton.setMaximumHeight(20)
        subLayout.addWidget(infoButton, 0)
        infoButton.clicked.connect(lambda: webbrowser.open(syncsketchURL, new=0, autoraise=True))

        spacer = QSpacerItem(0, 0, QSizePolicy.Expanding, QSizePolicy.Expanding)
        subLayout.addItem(spacer)

        ButtonLayout = QHBoxLayout()
        ButtonLayout.setAlignment(Qt.AlignRight)
        outer.addLayout(ButtonLayout)

        text = 'Install'
        icon = Ressources.installIcon


        self.installButton = IconButton(icon, text, highlight=True)
        ButtonLayout.addStretch()
        icon  = Ressources.launchIcon
        self.launchButton = IconButton(icon, 'Launch Syncsketch UI', highlight=True, success=True)
        self.launchButton.hide()
        ButtonLayout.addWidget(self.launchButton)
        ButtonLayout.addWidget(self.installButton)
        self.closeButton = IconButton(Ressources.closeIcon, ' Close')

        self.animatedGif.hide()
        ButtonLayout.addWidget(self.animatedGif)
        ButtonLayout.addWidget(self.closeButton)
        self.closeButton.setMaximumWidth(130)



class IconButton(QPushButton):
    def __init__(self, icon, text, highlight=False, success=False, *args, **kwargs):
        super(IconButton, self).__init__(QIcon(icon), text, *args, **kwargs)

        self.icon = icon
        self.highlight = highlight
        self.success = success
        self.setMinimumHeight(24)
        self.setIconSize(QSize(22, 22))


        if self.highlight:
            self.setStyleSheet('QPushButton{color: #282828; background-color: #BDBDBD}')
            font = self.font()
            font.setPointSize(12)
            font.setBold(True)
            self.setFont(font)

        if self.success:
            self.setStyleSheet('QPushButton{color: #3e753f; background-color: #dfefd9}')
            font = self.font()
            font.setPointSize(12)
            font.setBold(True)
            self.setFont(font)


        self.setIcon(QIcon(self.AlphaImage()))



    def AlphaImage(self):
        if self.highlight and not self.success:
            AlphaImage = QPixmap(self.icon)
            painter = QPainter(AlphaImage)

            painter.setCompositionMode(QPainter.CompositionMode_SourceIn)
            painter.fillRect(AlphaImage.rect(), '182828')

            return AlphaImage

        else:
            return QPixmap(self.icon)



class SyncSketchInstaller(QObject):
    def showit(self):
        self.installer = installerUI()
        self.installer.installButton.clicked.connect(self.__syncsketchIntall)
        self.installer.closeButton.clicked.connect(self.__closeButton)
        self.installer.launchButton.clicked.connect(self.__launchButton)
        self.installer.show()

    def done(self):
        self.installer.launchButton.show()
        self.installer.closeButton.hide()
        self.installer.animatedGif.hide()

        #Install the Shelf
        if InstallOptions.installShelf:
            from syncsketchGUI import install_shelf
            install_shelf()

    def __syncsketchIntall(self):
        self.installer.installButton.hide()
        self.installer.closeButton.setText('Cancel')
        self.installer.animatedGif.show()
        self.myThread = installThread()
        self.connect(self.myThread, SIGNAL('finished()'), self.done)
        self.myThread.start()


    def __closeButton(self):
        self.installer.clean()
        self.installer.close()

    def __launchButton(self):
        self.installer.clean()
        self.installer.close()
        #Open UI
        from syncsketchGUI import standalone
        reload(standalone)



def downloadFFmpegToDisc(platform=None, moveToLocation=None):
    import requests
    tmpdir = tempfile.mkdtemp()
    delete_tmpdir = True

    if platform == 'Windows':
        ffmpegBinaryPath = 'https://ffmpeg.zeranoe.com/builds/win64/static/ffmpeg-4.1-win64-static.zip'
    elif platform == 'Darwin':
        ffmpegBinaryPath = 'https://ffmpeg.zeranoe.com/builds/macos64/static/ffmpeg-4.1-macos64-static.zip'

    results = requests.get(ffmpegBinaryPath)

    ffmpegzip = os.path.join(tmpdir, 'ffmpeg.zip')
    ffmpegExtracted = os.path.join(tmpdir, 'extracted')

    with open(ffmpegzip, 'wb') as f:
        f.write(results.content)

    zip_ref = zipfile.ZipFile(ffmpegzip, 'r')
    zip_ref.extractall(ffmpegExtracted)
    zip_ref.close()

    ffmpegBinaryPath = glob.glob(os.path.join(ffmpegExtracted, '*', 'bin', 'ffmpeg*'))[0]
    ffprobeBinaryPath = glob.glob(os.path.join(ffmpegExtracted, '*', 'bin', 'ffprobe*'))[0]
    print('Moving FFMPEG from to directory: {0}'.format(moveToLocation))
    if not os.path.isdir(moveToLocation):
        os.mkdir(moveToLocation)
    os.chmod(ffmpegBinaryPath, 0o755)
    os.chmod(ffprobeBinaryPath, 0o755)
    shutil.copy(ffmpegBinaryPath, moveToLocation)
    shutil.copy(ffprobeBinaryPath, moveToLocation)



class installThread(QThread):
    '''Main Process that drives all installation'''
    def __init__(self):
        QThread.__init__(self)

    def __del__(self):
        self.wait()

    def run(self):
        self.startInstallationProcess()
        

    def startInstallationProcess(self):

        PLATFORM = platform.system()
        MAYA_VERSION = cmds.about(apiVersion=True) / 10000
        IN_MAYA = False
        PYTHON_PATH = ''
        MAYA_SCRIPTS_PATH = ''
        FFMPEG_PATH = ''
        PIP_PATH = ''
        tmpdir = None
        delete_tmpdir = False
        cmd = ''


        if PLATFORM == 'Windows':
            PYTHON_PATH = os.path.join(os.getenv('MAYA_LOCATION'), 'bin', 'mayapy.exe')
            MAYA_SCRIPTS_PATH = InstallPath['Windows']
            PIP_PATH = os.path.join(os.getenv('APPDATA'),'Python', 'Scripts', 'pip2.7.exe')

        elif PLATFORM == 'Darwin':
            PYTHON_PATH = '/usr/bin/python'
            MAYA_SCRIPTS_PATH = InstallPath['Darwin']
            PIP_PATH = os.path.join(expanduser('~'),'Library', 'Python', '2.7', 'bin', 'pip2.7')

        FFMPEG_PATH = os.path.join(MAYA_SCRIPTS_PATH, 'ffmpeg', 'bin')

        print(MAYA_SCRIPTS_PATH)
        print(PYTHON_PATH)
        print(PIP_PATH)

        try:
            # Create a temporary directory to act as a working directory if we were
            # not given one.
            if tmpdir is None:
                tmpdir = tempfile.mkdtemp()
                delete_tmpdir = True

            #Save get-pip.py
            pipInstaller = os.path.join(tmpdir, 'get-pip.py')


            if PLATFORM == 'Darwin':
                cmd = 'curl https://bootstrap.pypa.io/get-pip.py -o {0}'.format(pipInstaller).split(' ')
                print('Calling shell command: {0}'.format(cmd))
                #todo remove call to shell for security reasons
                print(subprocess.check_output(cmd))

            else:
                #this should be using secure https, but we shoul dbe fine for now
                #as we are only reading data, but might be a possible mid attack
                response = urllib2.urlopen('https://bootstrap.pypa.io/get-pip.py')
                data = response.read()
                with open(pipInstaller, 'w') as f:
                    f.write(data)

            #Install pip
            filepath, filename = os.path.split(pipInstaller)
            sys.path.insert(0, filepath)
            if PLATFORM == 'Darwin':
                cmd = '{0} {1} --user'.format('python2.7', pipInstaller).split(' ')
            else:
                cmd = '{0} {1} --user'.format(PYTHON_PATH, pipInstaller).split(' ')
            print('Calling shell command: {0}'.format(cmd))
            print(subprocess.check_output(cmd))

            #Install Dependencies
            cmd = '{0} install --ignore-installed --user {1} pyyaml requests[security]'.format(PIP_PATH, SYNCSKETCH_API_RELEASE_PATH).split(' ')
            print('Calling shell command: {0}'.format(cmd))
            print(subprocess.check_output(cmd))

            #Install SyncsketchGUI
            #Todo: We might wan't to check first if there is already a syncsketchGUI installed in a different path
            #todo: By using target, pip show won't find this package anymore
            toDir = '{0}/syncsketchGUI'.format(MAYA_SCRIPTS_PATH)
            if os.path.isdir(toDir):
                shutil.rmtree(toDir,ignore_errors=True)
                print('Deleting previous directory for a clean install {0} '.format(toDir))

            cmd = '{0} install --ignore-installed --target={1} {2}'.format(PIP_PATH, MAYA_SCRIPTS_PATH, SYNCSKETCH_GUI_RELEASE_PATH).split(' ')
            print('Calling shell command: {0}'.format(cmd))
            print(subprocess.check_output(cmd))


            #Finally Move things in place
            #fromDir = os.path.join(tmpdir, 'syncsketchGUI')

            #shutil.move(fromDir, toDir)
            #print('Moving files to directory: {0}'.format(MAYA_SCRIPTS_PATH))

            #Download FFMPeg Binaries
            downloadFFmpegToDisc(platform=PLATFORM, moveToLocation=FFMPEG_PATH)


        except Exception as e:
            print(e)

        finally:
            # Remove our temporary directory
            if delete_tmpdir and tmpdir:
                print('cleaning up temporary files: {0}'.format(tmpdir))
                shutil.rmtree(tmpdir, ignore_errors=True)




Installer = SyncSketchInstaller()
Installer.showit()
